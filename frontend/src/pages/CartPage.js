// frontend/src/pages/CartPage.js
import React, { useState, useEffect } from 'react';
import { useCart } from '../context/CartContext';
import { useNavigate } from 'react-router-dom';
import { useTelegram } from '../utils/telegram';
import './CartPage.css';

const CartPage = () => {
    const tg = useTelegram();
    const { cartItems, updateQuantity, clearCart, totalPrice } = useCart();
    const navigate = useNavigate();
    const [showForm, setShowForm] = useState(false);
    const [formData, setFormData] = useState({
        name: '',
        phone: '',
        address: '',
        shipping: '–ü–æ—á—Ç–∞'
    });

    // –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º, –∑–∞–ø–æ–ª–Ω–µ–Ω–∞ –ª–∏ —Ñ–æ—Ä–º–∞, —á—Ç–æ–±—ã –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –∫–Ω–æ–ø–∫—É "–ì–æ—Ç–æ–≤–æ"
    const isFormValid = formData.name && formData.phone && formData.address;

    useEffect(() => {
        // 3. –í—Å–µ –≤—ã–∑–æ–≤—ã tg —Ç–µ–ø–µ—Ä—å –±–µ–∑–æ–ø–∞—Å–Ω—ã
        tg.BackButton.show();
        const handleBackButtonClick = () => navigate(-1);
        tg.BackButton.onClick(handleBackButtonClick);

        return () => {
            tg.BackButton.offClick(handleBackButtonClick);
            tg.BackButton.hide();
        };
    }, [navigate, tg]);

    const handleInputChange = (e) => {
        const { name, value } = e.target;
        setFormData(prev => ({ ...prev, [name]: value }));
    };

    const handleCheckout = () => {
        // –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –∑–∞–∫–∞–∑–∞
        const orderDetails = cartItems.map(item =>
            `${item.name} (x${item.quantity}) - ${item.quantity * item.price} ‚ÇΩ`
        ).join('\n');

        const fullMessage = `
–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –•–æ—á—É —Å–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑.

üë§ **–ü–æ–ª—É—á–∞—Ç–µ–ª—å:** ${formData.name}
üìû **–¢–µ–ª–µ—Ñ–æ–Ω:** ${formData.phone}
üöö **–î–æ—Å—Ç–∞–≤–∫–∞:** ${formData.shipping}
üè† **–ê–¥—Ä–µ—Å:** ${formData.address}

---
**–ó–∞–∫–∞–∑:**
${orderDetails}
---
**–ò—Ç–æ–≥–æ:** ${totalPrice.toFixed(2)} ‚ÇΩ
        `.trim();

        // –≠—Ç–æ—Ç –º–µ—Ç–æ–¥ –∑–∞–∫—Ä–æ–µ—Ç Web App –∏ –ø–µ—Ä–µ–¥–∞—Å—Ç –¥–∞–Ω–Ω—ã–µ –±–æ—Ç—É.
        // –í–ê–ñ–ù–û: –≠—Ç–æ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç, —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –≤—ã –æ—Ç–∫—Ä–æ–µ—Ç–µ Web App —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É –≤ —á–∞—Ç–µ —Å –±–æ—Ç–æ–º!
        // –î–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ —ç—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –º–æ–∂–µ—Ç –Ω–µ —Å—Ä–∞–±–æ—Ç–∞—Ç—å.
        tg.sendData(fullMessage);
        // –ï—Å–ª–∏ sendData –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –∏–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –¥—Ä—É–≥–æ–π UX:
        // tg.close();
    };

    if (cartItems.length === 0 && !showForm) {
        return (
            <div className="cart-page empty">
                <h2>–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞</h2>
                <button onClick={() => navigate('/')}>–ü–µ—Ä–µ–π—Ç–∏ –∫ —Ç–æ–≤–∞—Ä–∞–º</button>
            </div>
        );
    }

    return (
        <div className="cart-page">
            {!showForm ? (
                <>
                    <div className="cart-header">
                        <h2>–í–∞—à –∑–∞–∫–∞–∑</h2>
                        <button className="clear-cart-btn" onClick={clearCart}>–û—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É</button>
                    </div>
                    <div className="cart-items">
                        {cartItems.map(item => (
                            <div key={item.id} className="cart-item">
                                <img src={item.main_image} alt={item.name} className="cart-item-img" />
                                <div className="cart-item-info">
                                    <div className="cart-item-name">{item.name}</div>
                                    <div className="cart-item-price">{item.price} ‚ÇΩ</div>
                                </div>
                                <div className="cart-item-controls">
                                    <button onClick={() => updateQuantity(item.id, item.quantity - 1)}>‚àí</button>
                                    <span>{item.quantity}</span>
                                    <button onClick={() => updateQuantity(item.id, item.quantity + 1)}>+</button>
                                </div>
                            </div>
                        ))}
                    </div>
                    <div className="sticky-footer">
                        <div className="total-price">
                            <span>–ò—Ç–æ–≥–æ:</span>
                            <span>{totalPrice.toFixed(2)} ‚ÇΩ</span>
                        </div>
                        <button className="checkout-btn" onClick={() => setShowForm(true)}>
                            –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑
                        </button>
                    </div>
                </>
            ) : (
                <>
                    <h2>–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞</h2>
                    <form className="checkout-form">
                        <input type="text" name="name" placeholder="–§–ò–û" value={formData.name} onChange={handleInputChange} required />
                        <input type="tel" name="phone" placeholder="–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞" value={formData.phone} onChange={handleInputChange} required />
                        <input type="text" name="address" placeholder="–ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏ (–ì–æ—Ä–æ–¥, —É–ª–∏—Ü–∞, –¥–æ–º, –∫–≤–∞—Ä—Ç–∏—Ä–∞, –∏–Ω–¥–µ–∫—Å)" value={formData.address} onChange={handleInputChange} required />
                        <div className="shipping-options">
                            <label className={formData.shipping === '–ü–æ—á—Ç–∞' ? 'active' : ''}>
                                <input type="radio" name="shipping" value="–ü–æ—á—Ç–∞" checked={formData.shipping === '–ü–æ—á—Ç–∞'} onChange={handleInputChange} />
                                –ü–æ—á—Ç–∞
                            </label>
                            <label className={formData.shipping === '–°–î–≠–ö' ? 'active' : ''}>
                                <input type="radio" name="shipping" value="–°–î–≠–ö" checked={formData.shipping === '–°–î–≠–ö'} onChange={handleInputChange} />
                                –°–î–≠–ö
                            </label>
                        </div>
                    </form>
                    <div className="sticky-footer">
                        <button className="checkout-btn" onClick={handleCheckout} disabled={!isFormValid}>
                            –ì–æ—Ç–æ–≤–æ
                        </button>
                    </div>
                </>
            )}
        </div>
    );
};

export default CartPage;