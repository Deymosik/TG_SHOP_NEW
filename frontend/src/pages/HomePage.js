import React, { useState, useEffect, useCallback, useRef } from 'react';
import axios from 'axios';
import ProductCard from '../components/ProductCard';
import './HomePage.css';
import { Link } from 'react-router-dom';
import {useCart} from "../context/CartContext";

const API_URL = "http://127.0.0.1:8000/api/products/";

const HomePage = () => {
    const [products, setProducts] = useState([]);
    const [loading, setLoading] = useState(false);
    const [nextPage, setNextPage] = useState(API_URL); // URL –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–∞–Ω–Ω—ã—Ö
    const observer = useRef();
    const { totalItems } = useCart();

    // –ò—Å–ø–æ–ª—å–∑—É–µ–º useRef –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –¥–≤–æ–π–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞ –≤ StrictMode
    const initialLoad = useRef(false);

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤
    const loadMoreProducts = useCallback(() => {
        // –ï—Å–ª–∏ —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –Ω–µ—Ç –∏–ª–∏ —É–∂–µ –∏–¥–µ—Ç –∑–∞–≥—Ä—É–∑–∫–∞, –≤—ã—Ö–æ–¥–∏–º
        if (!nextPage || loading) return;

        setLoading(true);
        axios.get(nextPage)
            .then(response => {
                // –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ü–µ—Ä–µ–¥ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º –Ω–æ–≤—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤, —É–±–µ–¥–∏–º—Å—è, —á—Ç–æ –æ–Ω–∏ –Ω–µ –¥—É–±–ª–∏—Ä—É—é—Ç—Å—è.
                // –≠—Ç–æ —Ä–µ—à–∞–µ—Ç –ø—Ä–æ–±–ª–µ–º—É —Å –¥–≤–æ–π–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–æ–π –≤ React.StrictMode.
                setProducts(prevProducts => {
                    const existingIds = new Set(prevProducts.map(p => p.id));
                    const newProducts = response.data.results.filter(p => !existingIds.has(p.id));
                    return [...prevProducts, ...newProducts];
                });

                // –°–æ—Ö—Ä–∞–Ω—è–µ–º URL —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
                setNextPage(response.data.next);
                setLoading(false);
            })
            .catch(error => {
                console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ç–æ–≤–∞—Ä–æ–≤:", error);
                setLoading(false);
            });
    }, [nextPage, loading]);

    // –ù–∞–±–ª—é–¥–∞—Ç–µ–ª—å –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–º —ç–ª–µ–º–µ–Ω—Ç–æ–º –¥–ª—è –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–π –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
    const lastProductElementRef = useCallback(node => {
        if (loading) return;
        if (observer.current) observer.current.disconnect();

        observer.current = new IntersectionObserver(entries => {
            if (entries[0].isIntersecting && nextPage) {
                loadMoreProducts();
            }
        });

        if (node) observer.current.observe(node);
    }, [loading, nextPage, loadMoreProducts]);

    // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–≤—É—é –ø–æ—Ä—Ü–∏—é —Ç–æ–≤–∞—Ä–æ–≤ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    useEffect(() => {
        // –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –≠—Ç–æ—Ç –±–ª–æ–∫ –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç, —á—Ç–æ –Ω–∞—á–∞–ª—å–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ–∏–∑–æ–π–¥–µ—Ç —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑.
        if (!initialLoad.current) {
            loadMoreProducts();
            initialLoad.current = true;
        }
    }, [loadMoreProducts]);

    return (
        <div className="home-page">
            <div className="products-grid">
                {products.map((product, index) => (
                    <Link
                        to={`/product/${product.id}`} // –£–∫–∞–∑—ã–≤–∞–µ–º –ø—É—Ç—å –∫ —Å—Ç—Ä–∞–Ω–∏—Ü–µ —Ç–æ–≤–∞—Ä–∞
                        key={product.id}
                        className="product-link"
                    >
                        <div ref={products.length === index + 1 ? lastProductElementRef : null}>
                            <ProductCard product={product}/>
                        </div>
                    </Link>
                ))}
            </div>
            {/* –ü–æ–∫–∞ –∏–¥–µ—Ç –∑–∞–≥—Ä—É–∑–∫–∞, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–∫–µ–ª–µ—Ç–æ–Ω—ã */}
            {loading && (
                <div className="products-grid">
                    {[...Array(4)].map((_, i) => <div key={`skeleton-${i}`} className="skeleton-card"></div>)}
                </div>
            )}
            {!nextPage && !loading && products.length > 0 &&
                <div className="end-of-list">–í—ã –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–ª–∏ –≤—Å–µ —Ç–æ–≤–∞—Ä—ã</div>}
            {totalItems > 0 && (
                <Link to="/cart" className="cart-fab">
                    üõí
                    <span className="cart-fab-badge">{totalItems}</span>
                </Link>
            )}
        </div>
    );
};

export default HomePage;